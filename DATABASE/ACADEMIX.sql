us#   USER ADMIN
CREATE USER 'Academix_Admin'@'%';
GRANT USAGE ON *.* TO 'Academix_Admin'@'%' 
REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, REFERENCES, INDEX, ALTER ON `academix`.* TO 'Academix_Admin'@'%' WITH GRANT OPTION;

#   CREATE DATABASE
CREATE DATABASE ACADEMIX;

#
#   CREATE COMMON TABLES
#

CREATE TABLE ACADEMIX.USERS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    PHONE VARCHAR(10) NOT NULL UNIQUE,
    PASS_HASH CHAR(64) NOT NULL
);

CREATE TABLE ACADEMIX.SESSION(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USER INT NOT NULL REFERENCES USERS(ID),
    DATETIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TOKEN VARCHAR(64) NOT NULL UNIQUE,
    EXPIRY TIMESTAMP NOT NULL DEFAULT DATE_ADD(CURRENT_TIMESTAMP, INTERVAL 1 WEEK)
);

CREATE TABLE ACADEMIX.DEPARTMENTS(
    CODE VARCHAR(10) PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL
);

#
#   ROLES AND AUTHORIZATION
#

CREATE TABLE ACADEMIX.ROLES(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE ACADEMIX.PERMISSIONS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(20) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(50) NOT NULL
);

CREATE TABLE ACADEMIX.ROLES_PERMISSIONS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ROLE INT NOT NULL REFERENCES ROLES(ID),
    DEPARTMENT VARCHAR(10) NOT NULL REFERENCES DEPARTMENTS(CODE),
    PERMISSION INT NOT NULL REFERENCES PERMISSIONS(ID),
    LEVEL TINYINT NOT NULL CHECK(LEVEL>0 AND LEVEL<3)
);

CREATE TABLE ACADEMIX.AUTHORIZATION(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    USER INT NOT NULL REFERENCES USERS(ID),
    ROLE INT NOT NULL REFERENCES ROLES(ID),
    APPROVER INT NOT NULL REFERENCES USERS(ID),
    STATUS CHAR(1) NOT NULL DEFAULT "P" CHECK(STATUS IN ("A", "D", "P"))
);

#
#   SKILLS
#

CREATE TABLE ACADEMIX.SKILLSET(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(20) NOT NULL
);

CREATE TABLE ACADEMIX.SKILLS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    SKILLSET INT NOT NULL REFERENCES SKILLSET(ID),    
    NAME VARCHAR(50) NOT NULL,
    LINK VARCHAR(2083) NOT NULL
);

CREATE TABLE ACADEMIX.STUDENT_SKILLS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STUDENT VARCHAR(12) NOT NULL REFERENCES STUDENTS(ID),
    SKILLS INT NOT NULL REFERENCES SKILLS(ID)
);

#
#   FACIAL RECOGNITION ATTENDANCE
#

CREATE TABLE ACADEMIX.ATTENDANCE(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STUDENT VARCHAR(12) NOT NULL REFERENCES STUDENTS(ID),
    ATTMOD INT NOT NULL REFERENCES USER(ID),
    LOCLAT FLOAT NOT NULL,
    LOCLON FLOAT NOT NULL,
    SUBJECT VARCHAR(10) NOT NULL REFERENCES SUBJECTS(CODE),
    DATETIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

#
#   PROGRESS
#

CREATE TABLE ACADEMIX.PROJECT(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(20) NOT NULL,
    TEAMLEAD INT NOT NULL REFERENCES STUDENTS(ID),
    MEMBER1 INT REFERENCES STUDENTS(ID),
    MEMBER2 INT REFERENCES STUDENTS(ID),
    MEMBER3 INT REFERENCES STUDENTS(ID),
    APPROVER INT NOT NULL REFERENCES USERS(ID),
    APPROVER_STATUS CHAR(1) NOT NULL DEFAULT "P" CHECK(STATUS IN ("A", "D", "P")),
    COORDINATOR INT NOT NULL REFERENCES USERS(ID),
    COORDINATOR_STATUS CHAR(1) NOT NULL DEFAULT "P" CHECK(STATUS IN ("A", "D", "P")),
);

CREATE TABLE ACADEMIX.PROJECTPHASES(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    PROJECTID INT REFERENCES PROGRESS(ID),
    PHASENAME VARCHAR(20) NOT NULL,
    FILES VARCHAR(2083) NOT NULL,
    APPROVER INT NOT NULL REFERENCES USERS(ID),
    APPROVER_STATUS CHAR(1) NOT NULL DEFAULT "P" CHECK(STATUS IN ("A", "D", "P")),
    COORDINATOR INT NOT NULL REFERENCES USERS(ID),
    COORDINATOR_STATUS CHAR(1) NOT NULL DEFAULT "P" CHECK(STATUS IN ("A", "D", "P"))
);

#
#   OTHER FUNCTIONALITIES
#

CREATE TABLE ACADEMIX.ACADEMIC(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    STUDENT INT NOT NULL REFERENCES STUDENTS(ID),
    SUBJECT VARCHAR(10) NOT NULL REFERENCES SUBJECTS(CODE),
    MARKS INT NOT NULL REFERENCES MARKS
);

CREATE TABLE ACADEMIX.MARKS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    IA1 INT,
    IA2 INT,

);

CREATE TABLE ACADEMIX.TEACHERS(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    TEACHER INT NOT NULL REFERENCES USERS(ID)
);

CREATE TABLE ACADEMIX.SUBJECTS(
    CODE VARCHAR(10) PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DEPARTMENT VARCHAR(10) NOT NULL REFERENCES DEPARTMENTS(CODE),
    TEACHER INT NOT NULL REFERENCES TEACHERS(ID)
);

CREATE TABLE ACADEMIX.STUDENTS(
    USN VARCHAR(12) PRIMARY KEY,
    STUDENT INT NOT NULL REFERENCES USERS(ID),
    DEPARTMENT VARCHAR(10) NOT NULL REFERENCES DEPARTMENTS(CODE),
    BATCH VARCHAR(10) NOT NULL,
);


#
#   EXPIRED_SESSIONS EVENT
#

CREATE EVENT EXPIRED_SESSIONS
ON SCHEDULE 
    EVERY 1 DAY
    STARTS '2024-12-15 00:15:00'   
DO
    DELETE FROM SESSION WHERE EXPIRY < NOW();


#
#   DATA ENTRY
#

#   USER DATA
INSERT INTO USERS(NAME, EMAIL, PHONE, PASS_HASH) VALUES ('admin', 'admin@agmr', '0000000000', '');
INSERT INTO USERS(NAME, EMAIL, PHONE, PASS_HASH) VALUES ('FS', 'FS7@FS', '9999999999', 'FS');
INSERT INTO USERS(NAME, EMAIL, PHONE, PASS_HASH) VALUES ('', '', '', '');

#   ROLES DATA
INSERT INTO ROLES(NAME) VALUES('ADMIN');
INSERT INTO ROLES(NAME) VALUES('PRINCIPAL');
INSERT INTO ROLES(NAME) VALUES('HOD');
INSERT INTO ROLES(NAME) VALUES('PROFESSOR');
INSERT INTO ROLES(NAME) VALUES('STAFF');
INSERT INTO ROLES(NAME) VALUES('OFFICE');
INSERT INTO ROLES(NAME) VALUES('ATTMOD');
INSERT INTO ROLES(NAME) VALUES('STUDENT');
INSERT INTO ROLES(NAME) VALUES('GUEST');
INSERT INTO ROLES(NAME) VALUES('SERVICE');
INSERT INTO ROLES(NAME) VALUES('');

#   PERMISSIONS DATA
INSERT INTO PERMISSIONS(NAME, PERMISSION) VALUES ();

#   ROLES_PERMISSIONS DATA
INSERT INTO ROLES_PERMISSIONS(ROLE, PERMISSION, LEVEL) VALUES ();

#   DEPARTMENTS DATA
INSERT INTO DEPARTMENTS(CODE, NAME) VALUES('CS', 'Computer Science and Engg');
INSERT INTO DEPARTMENTS(CODE, NAME) VALUES('AI', 'Artificial Intelligence');
INSERT INTO DEPARTMENTS(CODE, NAME) VALUES('DS', 'Data Science');
INSERT INTO DEPARTMENTS(CODE, NAME) VALUES('ME', 'Mechanical Engineering');
INSERT INTO DEPARTMENTS(CODE, NAME) VALUES('EC', 'Electronic and Communication');
INSERT INTO DEPARTMENTS(CODE, NAME) VALUES('EE', 'Electrical and Electronics');
INSERT INTO DEPARTMENTS(CODE, NAME) VALUES('CE', 'Civil Engineering');
INSERT INTO DEPARTMENTS(CODE, NAME) VALUES('', '');

#   AUTH DATA
INSERT INTO AUTHORIZATION(USER, DEPARTMENT, ROLE) VALUES (1, 'CS', 1);
INSERT INTO AUTHORIZATION(USER, DEPARTMENT, ROLE) VALUES (, '', );

#   SUBJECTS DATA
INSERT INTO SUBJECTS(CODE, NAME, DEPARTMENT, TEACHER) VALUES ('BCS501', 'SEPM', 'CS', 1);
INSERT INTO SUBJECTS(CODE, NAME, DEPARTMENT, TEACHER) VALUES ('', '', '', );

#   SESSION DATA
INSERT INTO SESSION(USER, TOKEN) VALUES(7, "JSLDKJFSLF");
INSERT INTO SESSION(USER, TOKEN) VALUES(, '');